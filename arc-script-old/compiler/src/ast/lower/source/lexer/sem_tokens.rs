use crate::info::names::{NameId, NameInterner};

use time::Duration;
use time::PrimitiveDateTime as DateTime;

/// A semantic token extracted from a `LogosToken` by `Lexer`.
#[rustfmt::skip]
#[derive(Debug, Clone)]
pub enum Token {
    Indent,
    Dedent,
//=============================================================================
// Grouping
//=============================================================================
    BraceL,
    BraceR,
    BraceLR,
    BrackL,
    BrackR,
    BrackLR,
    ParenL,
    ParenR,
    ParenLR,
    AngleL,
    AngleR,
    AngleLR,
//=============================================================================
// Operators
//=============================================================================
    ArrowR,
    AtSign,
    Bar,
    BarBar,
    Colon,
    ColonColon,
    Comma,
    Dot,
    DotDot,
    DotDotEq,
    Equ,
    EquEqu,
    Geq,
    Imply,
    Leq,
    Minus,
    Neq,
    Percent,
    Pipe,
    Plus,
    Semi,
    Slash,
    Star,
    StarStar,
    Tilde,
    Underscore,
//=============================================================================
// Unused operators
//=============================================================================
    // Bang,
    // Dollar,
    // Amp,
    // AmpAmp,
    // SemiSemi,
    // ArrowL,
    // Qm,
    // QmQmQm,
    // Caret,
//=============================================================================
// Keywords
//=============================================================================
    After,
    And,
    As,
    Band,
    Bor,
    Break,
    By,
    Crate,
    Continue,
    Bxor,
    Else,
    Enwrap,
    Emit,
    Every,
    Extern,
    Unwrap,
    Is,
    Enum,
    For,
    Fun,
    If,
    In,
    Let,
    Log,
    Loop,
    Match,
    Not,
    On,
    Or,
    Return,
    Task,
    Val,
    Var,
    Type,
    Use,
    Xor,
//=============================================================================
// Unused Keywords
//=============================================================================
    // Add,
    // Box,
    // Del,
    // Do,
    // End,
    // Of,
    // Port,
    // Pub,
    // Reduce,
    // Shutdown,
    // Sink,
    // Source,
    // Startup,
    // State,
    // Then,
    // Timeout,
    // Timer,
    // Trigger,
    // Where,
//=============================================================================
// Primitive Types
//=============================================================================
    Bool,
    F32,
    F64,
    I8,
    I16,
    I32,
    I64,
    U8,
    U16,
    U32,
    U64,
    Str,
    Unit,
    Char,
    Size,
//=============================================================================
// Identifiers and Literals
//=============================================================================
    NameId(NameId),
    LitI8(i8),
    LitI16(i16),
    LitI32(i32),
    LitI64(i64),
    LitU8(u8),
    LitU16(u16),
    LitU32(u32),
    LitU64(u64),
    LitF32(f32),
    LitF64(f64),
    LitBool(bool),
    LitChar(char),
    LitStr(String),
    LitDateTime(DateTime),
    LitDuration(Duration),
}
