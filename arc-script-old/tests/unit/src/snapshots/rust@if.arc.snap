---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/if.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::arcorn;
    pub fn test() -> i32 {
        let x_0: bool = true;
        let x_1: bool = false;
        let x_2: i32 = 3i32;
        let x_5: i32 = if (x_0.clone()) {
            let x_3: i32 = if (x_1.clone()) {
                (x_2.clone())
            } else {
                (x_2.clone())
            };
            (x_3.clone())
        } else {
            let x_4: i32 = if (x_1.clone()) {
                (x_2.clone())
            } else {
                (x_2.clone())
            };
            (x_4.clone())
        };
        (x_5.clone())
    }
}
pub use arc_script_output::*;


