---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/task_id_untagged.arc

---
module @toplevel {
    func private @crate_Identity() -> ((!arc.stream<!arc.struct<key: si32, value: si32>>) -> (!arc.stream<!arc.struct<key: si32, value: si32>>))
    func @crate_Identity_on_event(
        %this : !arc.struct<>,
        %x_0: !arc.enum<crate_Identity_IInterface___ : !arc.struct<key: si32, value: si32>>,
        %output_stream : !arc.stream<!arc.enum<crate_Identity_OInterface___ : !arc.struct<key: si32, value: si32>>>
    ) -> ()
    attributes {
        "arc.mod_name" = "mod_crate_Identity",
        "arc.task_name" = "crate_Identity",
        "arc.is_event_handler"
    } {
        %event_0 = arc.enum_access "crate_Identity_IInterface___" in (%x_0 : !arc.enum<crate_Identity_IInterface___ : !arc.struct<key: si32, value: si32>>) : !arc.struct<key: si32, value: si32>
        %x_1 = arc.make_enum (%event_0 : !arc.struct<key: si32, value: si32>) as "crate_Identity_OInterface___" : !arc.enum<crate_Identity_OInterface___ : !arc.struct<key: si32, value: si32>>
        "arc.emit"(%x_1, %output_stream) : (!arc.enum<crate_Identity_OInterface___ : !arc.struct<key: si32, value: si32>>, !arc.stream<!arc.enum<crate_Identity_OInterface___ : !arc.struct<key: si32, value: si32>>>) -> ()
        return
    }
    func @crate_Identity_on_start(
        %this : !arc.struct<>
    ) -> ()
    attributes {
        "arc.mod_name" = "mod_crate_Identity",
        "arc.task_name" = "crate_Identity",
        "arc.is_init"
    } {
        // noop
        return
    }}

