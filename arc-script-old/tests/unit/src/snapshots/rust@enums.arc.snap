---
source: tests/unit/src/insta.rs
expression: s
input_file: tests/unit/src/tests/expect_pass/enums.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::codegen;
    use arc_script::codegen::*;
    #[codegen::rewrite]
    pub enum Foo {
        Foo_Bar(u32),
        Foo_Baz(f32),
    }
    pub fn main() -> Unit {
        let x_0: u32 = 200u32;
        let x_1: f32 = 2f32;
        let x_2: Foo = enwrap!(Foo_Bar, val!(x_0));
        let x_3: u32 = unwrap!(Foo_Bar, val!(x_2));
        let x_4: Foo = enwrap!(Foo_Baz, val!(x_1));
        let x_5: bool = is!(Foo_Baz, val!(x_4));
        let x_6: Unit = ();
        val!(x_6)
    }
}
pub use arc_script_output::*;


