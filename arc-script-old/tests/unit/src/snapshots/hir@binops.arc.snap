---
source: arc-script-test/compile/src/insta.rs
expression: s
input_file: arc-script-test/compile/src/tests/expect_pass/binops.arc

---
fun main(): unit {
    val x_0: bool = true;
    val x_1: i8 = 127i8;
    val x_2: i16 = 32767i16;
    val x_3: i32 = 2147483647;
    val x_4: i64 = 9223372036854775807i64;
    val x_5: u8 = 255u8;
    val x_6: u16 = 65535u16;
    val x_7: u32 = 4294967295u32;
    val x_8: u64 = 18446744073709551615u64;
    val x_9: f32 = 3.4028235e38f32;
    val x_A: f64 = 1.7976931348623157e308;
    val x_B: i8 = 126i8;
    val x_C: i16 = 32766i16;
    val x_D: i32 = 2147483646;
    val x_E: i64 = 9223372036854775806i64;
    val x_F: u8 = 254u8;
    val x_G: u16 = 65534u16;
    val x_H: u32 = 4294967294u32;
    val x_I: u64 = 18446744073709551614u64;
    val x_J: f32 = 3.4028235e37f32;
    val x_K: f64 = 1.7976931348623155e308;
    val x_L: i8 = x_1 + x_1;
    val x_M: i16 = x_2 + x_2;
    val x_N: i32 = x_3 + x_3;
    val x_O: i64 = x_4 + x_4;
    val x_P: u8 = x_5 + x_5;
    val x_Q: u16 = x_6 + x_6;
    val x_R: u32 = x_7 + x_7;
    val x_S: u64 = x_8 + x_8;
    val x_T: f32 = x_9 + x_9;
    val x_U: f64 = x_A + x_A;
    val x_V: i8 = x_1 - x_1;
    val x_W: i16 = x_2 - x_2;
    val x_X: i32 = x_3 - x_3;
    val x_Y: i64 = x_4 - x_4;
    val x_Z: u8 = x_5 - x_5;
    val x_a: u16 = x_6 - x_6;
    val x_b: u32 = x_7 - x_7;
    val x_c: u64 = x_8 - x_8;
    val x_d: f32 = x_9 - x_9;
    val x_e: f64 = x_A - x_A;
    val x_f: i8 = x_1 * x_1;
    val x_g: i16 = x_2 * x_2;
    val x_h: i32 = x_3 * x_3;
    val x_i: i64 = x_4 * x_4;
    val x_j: u8 = x_5 * x_5;
    val x_k: u16 = x_6 * x_6;
    val x_l: u32 = x_7 * x_7;
    val x_m: u64 = x_8 * x_8;
    val x_n: f32 = x_9 * x_9;
    val x_o: f64 = x_A * x_A;
    val x_p: i8 = x_1 / x_1;
    val x_q: i16 = x_2 / x_2;
    val x_r: i32 = x_3 / x_3;
    val x_s: i64 = x_4 / x_4;
    val x_t: u8 = x_5 / x_5;
    val x_u: u16 = x_6 / x_6;
    val x_v: u32 = x_7 / x_7;
    val x_w: u64 = x_8 / x_8;
    val x_x: f32 = x_9 / x_9;
    val x_y: f64 = x_A / x_A;
    val x_z: i8 = x_1 % x_1;
    val x__0: i16 = x_2 % x_2;
    val x__1: i32 = x_3 % x_3;
    val x__2: i64 = x_4 % x_4;
    val x__3: u8 = x_5 % x_5;
    val x__4: u16 = x_6 % x_6;
    val x__5: u32 = x_7 % x_7;
    val x__6: u64 = x_8 % x_8;
    val x__7: f32 = x_9 % x_9;
    val x__8: f64 = x_A % x_A;
    val x__9: bool = x_1 < x_1;
    val x__A: bool = x_2 < x_2;
    val x__B: bool = x_3 < x_3;
    val x__C: bool = x_4 < x_4;
    val x__D: bool = x_5 < x_5;
    val x__E: bool = x_6 < x_6;
    val x__F: bool = x_7 < x_7;
    val x__G: bool = x_8 < x_8;
    val x__H: bool = x_9 < x_9;
    val x__I: bool = x_A < x_A;
    val x__J: bool = x_1 <= x_1;
    val x__K: bool = x_2 <= x_2;
    val x__L: bool = x_3 <= x_3;
    val x__M: bool = x_4 <= x_4;
    val x__N: bool = x_5 <= x_5;
    val x__O: bool = x_6 <= x_6;
    val x__P: bool = x_7 <= x_7;
    val x__Q: bool = x_8 <= x_8;
    val x__R: bool = x_9 <= x_9;
    val x__S: bool = x_A <= x_A;
    val x__T: bool = x_1 > x_1;
    val x__U: bool = x_2 > x_2;
    val x__V: bool = x_3 > x_3;
    val x__W: bool = x_4 > x_4;
    val x__X: bool = x_5 > x_5;
    val x__Y: bool = x_6 > x_6;
    val x__Z: bool = x_7 > x_7;
    val x__a: bool = x_8 > x_8;
    val x__b: bool = x_9 > x_9;
    val x__c: bool = x_A > x_A;
    val x__d: bool = x_1 >= x_1;
    val x__e: bool = x_2 >= x_2;
    val x__f: bool = x_3 >= x_3;
    val x__g: bool = x_4 >= x_4;
    val x__h: bool = x_5 >= x_5;
    val x__i: bool = x_6 >= x_6;
    val x__j: bool = x_7 >= x_7;
    val x__k: bool = x_8 >= x_8;
    val x__l: bool = x_9 >= x_9;
    val x__m: bool = x_A >= x_A;
    val x__n: bool = x_0 == x_0;
    val x__o: bool = x_1 == x_1;
    val x__p: bool = x_2 == x_2;
    val x__q: bool = x_3 == x_3;
    val x__r: bool = x_4 == x_4;
    val x__s: bool = x_5 == x_5;
    val x__t: bool = x_6 == x_6;
    val x__u: bool = x_7 == x_7;
    val x__v: bool = x_8 == x_8;
    val x__w: bool = x_9 == x_9;
    val x__x: bool = x_A == x_A;
    val x__y: bool = x_0 != x_0;
    val x__z: bool = x_1 != x_1;
    val x___0: bool = x_2 != x_2;
    val x___1: bool = x_3 != x_3;
    val x___2: bool = x_4 != x_4;
    val x___3: bool = x_5 != x_5;
    val x___4: bool = x_6 != x_6;
    val x___5: bool = x_7 != x_7;
    val x___6: bool = x_8 != x_8;
    val x___7: bool = x_9 != x_9;
    val x___8: bool = x_A != x_A;
    val x___9: bool = x_0 and x_0;
    val x___A: bool = x_0 or x_0;
    val x___B: bool = x_0 xor x_0;
    val x___C: i8 = x_1 band x_1;
    val x___D: i16 = x_2 band x_2;
    val x___E: i32 = x_3 band x_3;
    val x___F: i64 = x_4 band x_4;
    val x___G: u8 = x_5 band x_5;
    val x___H: u16 = x_6 band x_6;
    val x___I: u32 = x_7 band x_7;
    val x___J: u64 = x_8 band x_8;
    val x___K: i8 = x_1 bor x_1;
    val x___L: i16 = x_2 bor x_2;
    val x___M: i32 = x_3 bor x_3;
    val x___N: i64 = x_4 bor x_4;
    val x___O: u8 = x_5 bor x_5;
    val x___P: u16 = x_6 bor x_6;
    val x___Q: u32 = x_7 bor x_7;
    val x___R: u64 = x_8 bor x_8;
    val x___S: i8 = x_1 bxor x_1;
    val x___T: i16 = x_2 bxor x_2;
    val x___U: i32 = x_3 bxor x_3;
    val x___V: i64 = x_4 bxor x_4;
    val x___W: u8 = x_5 bxor x_5;
    val x___X: u16 = x_6 bxor x_6;
    val x___Y: u32 = x_7 bxor x_7;
    val x___Z: u64 = x_8 bxor x_8;
    val x___a: f32 = x_9 ** x_J;
    val x___b: f64 = x_A ** x_K;
    val x___c: unit = unit;
    x___c
}

