---
source: tests/unit/src/insta.rs
expression: s
input_file: tests/unit/src/tests/expect_pass/literals.arc

---
#[allow(non_snake_case)]
#[allow(unused_must_use)]
#[allow(dead_code)]
#[allow(unused_variables)]
#[allow(unused_imports)]
#[allow(unused_braces)]
#[allow(irrefutable_let_patterns)]
#[allow(clippy::redundant_field_names)]
#[allow(clippy::unused_unit)]
#[allow(clippy::double_parens)]
pub mod arc_script_output {
    use super::*;
    use arc_script::codegen;
    use arc_script::codegen::*;
    pub fn test() -> Unit {
        let x_0: i8 = 127i8;
        let x_1: i8 = -128i8;
        let x_2: i16 = 32767i16;
        let x_3: i16 = -32768i16;
        let x_4: i32 = 2147483647i32;
        let x_5: i32 = -2147483648i32;
        let x_6: i64 = 9223372036854775807i64;
        let x_7: i64 = -9223372036854775808i64;
        let x_8: u8 = 255u8;
        let x_9: u16 = 65535u16;
        let x_A: u32 = 4294967295u32;
        let x_B: u64 = 18446744073709551615u64;
        let x_C: f32 = 340282350000000000000000000000000000000f32;
        let x_D: f32 = -340282350000000000000000000000000000000f32;
        let x_E : f64 = 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f64 ;
        let x_F : f64 = - 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f64 ;
        let x_G: bool = true;
        let x_H: bool = false;
        let x_I: Unit = ();
        val!(x_I)
    }
}
pub use arc_script_output::*;


